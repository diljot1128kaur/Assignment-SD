//1

 CREATE TABLE Books (
    BookID INT PRIMARY KEY,
    Title VARCHAR(100),
    Author VARCHAR(50),
    PublishedYear INT
 );

ALTER TABLE Books ADD ISBN VARCHAR(13);
ALTER TABLE Books DROP COLUMN PublishedYear;


//2

CREATE TABLE Students (
    StudentID INT PRIMARY KEY,
    Name VARCHAR(50),
    Age INT,
    Grade VARCHAR(2)
);

INSERT INTO Students (StudentID, Name, Age, Grade)
VALUES 
(101, 'John Smith', 15, 'A'),
(102, 'Jane Doe', 16, 'B'),
(103, 'Alice Lee', 14, 'A');

SELECT Name
FROM Students
WHERE Age > 15;

INSERT INTO Students (StudentID, Name, Age, Grade)
VALUES (104, 'Tom Brown', 15, 'C');

UPDATE Students
SET Grade = 'A+'
WHERE Name = 'Jane Doe';
DELETE FROM Students
WHERE Grade = 'C';


//3
GRANT SELECT, INSERT ON Books TO User2;
REVOKE INSERT ON Books FROM User2;



//4

START TRANSACTION;
INSERT INTO Orders (OrderID, ProductID, Quantity)
VALUES (201, 105, 2);
UPDATE Inventory
SET Quantity = Quantity - 2
WHERE ProductID = 105;
COMMIT;

//5

CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    Name VARCHAR(50),
    Email VARCHAR(50),
    Phone VARCHAR(15)
);
INSERT INTO Customers (CustomerID, Name, Email, Phone)
VALUES (201, 'Emily Clark', 'emily@example.com', '1234567890');
GRANT SELECT ON Customers TO AdminUser;
START TRANSACTION;
DELETE FROM Customers WHERE CustomerID = 201;
ROLLBACK;



//6
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(50),
    Department VARCHAR(30),
    Salary INT
);

ALTER TABLE Employees
RENAME COLUMN Department TO Dept;

ALTER TABLE Employees
ADD JoiningDate DATE DEFAULT '2024-01-01';

ALTER TABLE Employees
DROP COLUMN Salary;
CREATE TABLE Departments (
    DeptID INT PRIMARY KEY,
    DeptName VARCHAR(30) UNIQUE
);

ALTER TABLE Employees
ADD DeptID INT,
ADD FOREIGN KEY (DeptID) REFERENCES Departments(DeptID);


//7
INSERT INTO Employees (EmployeeID, Name, Dept, Salary)
VALUES (1, 'Alice', 'HR', 50000);

SELECT * FROM Employees
WHERE Dept = 'HR';

UPDATE Employees
SET Salary = Salary * 1.1
WHERE Dept = 'IT';

DELETE FROM Employees
WHERE Salary < 40000;

MERGE INTO Employees AS target
USING (VALUES (1, 'Alice', 'HR', 55000)) AS source (EmployeeID, Name, Dept, Salary)

ON target.EmployeeID = source.EmployeeID
WHEN MATCHED THEN
    UPDATE SET Salary = source.Salary
WHEN NOT MATCHED THEN
    INSERT (EmployeeID, Name, Dept, Salary)
    VALUES (source.EmployeeID, source.Name, source.Dept, source.Salary);

//8
GRANT SELECT, UPDATE ON Employees TO HRManager;
REVOKE UPDATE ON Employees FROM HRManager;

CREATE ROLE DataViewer;
GRANT SELECT ON ALL TABLES TO DataViewer;

GRANT DataViewer TO Viewer1;
REVOKE ALL PRIVILEGES ON ALL TABLES FROM InternUser;

//9
START TRANSACTION;
INSERT INTO Departments (DeptID, DeptName)
VALUES (1, 'Finance');
COMMIT;

START TRANSACTION;
INSERT INTO Departments (DeptID, DeptName)
VALUES (2, 'IT');
ROLLBACK; 
COMMIT; 

START TRANSACTION;
SAVEPOINT BeforeInserts;
INSERT INTO Employees (EmployeeID, Name, Dept, Salary) VALUES (101, 'John', 'HR', 40000);
ROLLBACK TO SAVEPOINT BeforeInserts;
COMMIT;

//10
CREATE TABLE Projects (
    ProjectID INT PRIMARY KEY,
    ProjectName VARCHAR(50),
    EmployeeID INT,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

INSERT INTO Projects (ProjectID, ProjectName, EmployeeID)
VALUES (101, 'Website Upgrade', 1);

START TRANSACTION;
INSERT INTO Projects (ProjectID, ProjectName, EmployeeID)
VALUES (102, 'Mobile App Development', 2);


IF NOT EXISTS (SELECT * FROM Employees WHERE EmployeeID = 2) THEN
    ROLLBACK;
ELSE
    COMMIT;
END IF;




